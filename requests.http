# Install the REST client in Visual Studio Code to Send Requests with this file;
# Alternatively, you can use Postman to send requests
# TODO: Introduce variables

# Healthcheck
GET http://localhost:5000/status

### 

#~~~~~~~~~~~~~~~~~ USERS ~~~~~~~~~~~~~~~~~

# Query All Stocks/Crypto
GET http://localhost:5000/api/stocks/list

###
# Registration
POST http://localhost:5000/api/users/register HTTP/1.1
Content-Type: application/x-www-form-urlencoded

email=foo@hotmail.com
&password=bar123

### 
# Login
GET http://localhost:5000/api/users/login
	?email=foo@hotmail.com
	&password=bar123

###
# Update Name
PUT http://localhost:5000/api/users/name
Content-Type: application/json

{
	"email": "foo@hotmail.com",
	"name": "FooBar"
}

###
# Delete user
DELETE http://localhost:5000/api/users/delete
Content-Type: application/json

{
	"email": "foo@hotmail.com"
}

###
# ~~~~~~~~~~~~~~ STOCKS ~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Create Stock
POST http://localhost:5000/api/stocks/create
Content-Type: application/json

{
	"name": "MSFT",
	"type": "stock"
}

###

# Create Crypto
POST http://localhost:5000/api/stocks/create
Content-Type: application/json

{
	"name": "BTC",
	"type": "crypto"
}

###

# Get Stock
GET http://localhost:5000/api/stocks/get
Content-Type: application/json

{
	"name": "MSFT",
	"type": "stock"
}

###

# Get Crypto
GET http://localhost:5000/api/stocks/get
Content-Type: application/json

{
	"name": "BTC",
	"type": "crypto"
}

###

PUT http://localhost:5000/api/stocks/update
Content-Type: application/json

{
	"name": "MSFT",
	"type": "stock"
}

###

PUT http://localhost:5000/api/stocks/update
Content-Type: application/json

{
	"name": "BTC",
	"type": "crypto"
}
